package doancanhan;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class RentalSystem {
    private static List<String> cart = new ArrayList<>();
    private static int total = 0;
    private static String customerName = "";
    private static String customerPhone = "";

    public static void main(String[] args) {
        JFrame frame = new JFrame("Hệ thống mượn đồ");
        frame.setSize(600, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridLayout(3, 2, 10, 10));
        
        // Đặt màu nền gradient pastel
        JPanel panel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;
                GradientPaint gp = new GradientPaint(0, 0, new Color(255, 223, 186), getWidth(), getHeight(), new Color(186, 225, 255));
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());
            }
        };
        panel.setLayout(new GridLayout(3, 2, 10, 10));
        frame.setContentPane(panel);

        // Tạo nút với màu pastel
        JButton btnRentItem = createButton("Mượn sản phẩm", new Color(255, 182, 193)); // Hồng nhạt
        JButton btnAddCustomer = createButton("Thêm khách hàng", new Color(255, 218, 185)); // Cam nhạt
        JButton btnCreateInvoice = createButton("Tạo hóa đơn", new Color(152, 251, 152)); // Xanh lá nhạt
        JButton btnReturnItem = createButton("Trả sản phẩm", new Color(173, 216, 230)); // Xanh dương nhạt
        JButton btnViewCategories = createButton("Xem danh mục", new Color(216, 191, 216)); // Tím nhạt
        JButton btnViewCart = createButton("Xem danh sách mượn", new Color(240, 230, 140)); // Vàng nhạt

        btnRentItem.addActionListener(e -> showViewCategoriesDialog());
        btnAddCustomer.addActionListener(e -> showAddCustomerDialog());
        btnCreateInvoice.addActionListener(e -> showCreateInvoiceDialog());
        btnReturnItem.addActionListener(e -> showReturnItemDialog());
        btnViewCategories.addActionListener(e -> showViewCategoriesDialog());
        btnViewCart.addActionListener(e -> showViewCartDialog());

        panel.add(btnRentItem);
        panel.add(btnAddCustomer);
        panel.add(btnCreateInvoice);
        panel.add(btnReturnItem);
        panel.add(btnViewCategories);
        panel.add(btnViewCart);

        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        frame.setVisible(true);
    }

    private static JButton createButton(String text, Color color) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.BOLD, 24));
        button.setBackground(color);
        button.setOpaque(true);
        button.setBorderPainted(false);
        return button;
    }

    private static void showAddCustomerDialog() {
        JTextField nameField = new JTextField();
        JTextField phoneField = new JTextField();

        Object[] message = {"Họ và tên:", nameField, "Số điện thoại:", phoneField};

        int option = JOptionPane.showConfirmDialog(null, message, "Thêm khách hàng", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            customerName = nameField.getText();
            customerPhone = phoneField.getText();
        }
    }

    private static void showCreateInvoiceDialog() {
        if (customerName.isEmpty() || cart.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Chưa có thông tin khách hàng hoặc danh sách mượn rỗng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        StringBuilder invoice = new StringBuilder("Hóa đơn\n-------------------\n");
        invoice.append("Khách hàng: ").append(customerName).append("\n");
        invoice.append("Số điện thoại: ").append(customerPhone).append("\n-------------------\n");
        for (String item : cart) {
            invoice.append(item).append("\n");
        }
        invoice.append("-------------------\nTổng tiền: ").append(total).append("đ");

        JOptionPane.showMessageDialog(null, invoice.toString(), "Hóa đơn", JOptionPane.INFORMATION_MESSAGE);
    }

    private static void showViewCategoriesDialog() {
        String[] categories = {"Quần áo", "Camera"};
        String category = (String) JOptionPane.showInputDialog(null, "Chọn danh mục:", "Danh mục", JOptionPane.QUESTION_MESSAGE, null, categories, categories[0]);
        if (category != null) {
            showProductSelectionDialog(category);
        }
    }

    private static void showProductSelectionDialog(String category) {
        String[] products = category.equals("Quần áo") ?
                new String[]{"Áo vest - 200.000đ/ngày", "Đầm dạ hội - 300.000đ/ngày"} :
                new String[]{"Máy ảnh DSLR - 500.000đ/ngày", "Máy quay phim - 800.000đ/ngày"};
        
        String product = (String) JOptionPane.showInputDialog(null, "Chọn sản phẩm:", "Sản phẩm", JOptionPane.QUESTION_MESSAGE, null, products, products[0]);
        
        if (product != null) {
            int price = product.contains("200.000") ? 200000 : product.contains("300.000") ? 300000 : product.contains("500.000") ? 500000 : 800000;
            cart.add(product);
            total += price;
        }
    }

    private static void showViewCartDialog() {
        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Danh sách mượn trống!", "Danh sách mượn", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        StringBuilder cartList = new StringBuilder("Danh sách sản phẩm đã mượn:\n");
        for (String item : cart) {
            cartList.append("- ").append(item).append("\n");
        }
        cartList.append("Tổng tiền: ").append(total).append("đ");
        
        JOptionPane.showMessageDialog(null, cartList.toString(), "Danh sách mượn", JOptionPane.INFORMATION_MESSAGE);
    }

    private static void showReturnItemDialog() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
